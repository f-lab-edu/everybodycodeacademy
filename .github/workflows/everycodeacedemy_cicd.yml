name: Docker Image CICD

on:
  workflow_dispatch:
  
jobs:
  test:
      runs-on: ubuntu-latest
      env: 
         working-directory: ./everycodeacademy
         working-directory2: ./everycodeacademy
         scounter.conf: ${{ secrets.SCOUTER_AGENT_JAVA_CONF }}

      steps:
        - uses: actions/checkout@v3
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'corretto'
          
        - name: Build with Gradle
          working-directory: ${{ env.working-directory }}
          run: |
            ./gradlew clean build -x test
            pwd
            ls


        - name: download scouter jar
          working-directory: ${{ env.working-directory }}
          run: |
            wget https://github.com/scouter-project/scouter/releases/download/v2.20.0/scouter-min-2.20.0.tar.gz
            tar -zxvf scouter-min-2.20.0.tar.gz

        - name: copy scouter.conf
          working-directory: ${{ env.working-directory2 }}
          run:            
            echo "${{ env.scounter.conf }}" >> scounter.conf

            
        
            
          
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Docker build & push
          working-directory: ${{ env.working-directory }}
          run: |
           pwd
           ls -l
           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
           docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}} .
           docker push ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}

        - name: Deploy to ec2
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.EC2_HOST1}} # EC2 퍼블릭 IPv4 DNS
            username: ${{ secrets.EC2_USERNAME }} # ubuntu
            #password: ${{ secrets.EC2_PASSWORD }}
            port: 22
            key: ${{ secrets.AWS_EC2_KEY }}
            script: |
              docker ps
              docker pull ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}
              docker stop everycodeacedemy
              sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}
              docker image prune -f
